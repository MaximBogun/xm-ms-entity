package com.icthh.xm.ms.entity.util;

import com.icthh.xm.ms.entity.domain.XmEntity;
import lombok.experimental.UtilityClass;
import lombok.extern.slf4j.Slf4j;
import org.springframework.transaction.support.TransactionSynchronizationAdapter;
import org.springframework.transaction.support.TransactionSynchronizationManager;

import java.util.function.Consumer;

/**
 * Utility for database operations.
 */
@Slf4j
@UtilityClass
@SuppressWarnings("squid:S1118") // private constructor generated by lombok
public final class DatabaseUtil {

    public static void runAfterTransaction(XmEntity xmEntity, Consumer<XmEntity> task) {
        TransactionSynchronizationManager.registerSynchronization(new TransactionSynchronizationAdapter() {
            @Override
            public void afterCompletion(int status) {
                super.afterCompletion(status);
                if (status == STATUS_COMMITTED) {
                    try {
                        task.accept(xmEntity);
                    } catch (Exception e) {
                        log.error("Error in afterCompletion stage during transaction synchronization for entity: {}",
                                  xmEntity, e);
                    }
                }
            }
        });
    }
}
